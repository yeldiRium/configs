* Emacs configuration
** Keybindings
Bind window movement to Meta+Arrow Keys
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "s-<up>") 'windmove-up)
(global-set-key (kbd "s-<right>") 'windmove-right)
(global-set-key (kbd "s-<down>") 'windmove-down)
(global-set-key (kbd "s-<left>") 'windmove-left)
#+END_SRC

** package archives
 load emacs 24's package system. Add MELPA repository.
 #+BEGIN_SRC emacs-lisp
 (when (>= emacs-major-version 24)
   (require 'package)
   (add-to-list
    'package-archives
    '("melpa" . "http://melpa.milkbox.net/packages/")
    t))
 #+END_SRC

** initialize packages
Initialize installed packages for further use.
#+BEGIN_SRC emacs-lisp
(package-initialize)
#+END_SRC

** Custom config (autogenerated)
- enable themes
- set safe themes
- activate installed packages

Whenever you install a new package or enable a theme, look at your ~/.emacs.d/init.el and move any
new code there into this block.
#+BEGIN_SRC emacs-lisp
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-enabled-themes (quote (monokai)))
 '(custom-safe-themes
   (quote
    ("bd7b7c5df1174796deefce5debc2d976b264585d51852c962362be83932873d9" default)))
 '(package-selected-packages (quote ( 
    org
    org-sticky-header
    company
    emojify
    expand-region
    multiple-cursors
    nlinum-relative
    htmlize
    monokai-theme))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
#+END_SRC

* Package
Please install all packages listed under Custom config.

** org-mode
*** variables
Set agenda files.
#+BEGIN_SRC emacs-lisp
(custom-set-variables
  '(org-agenda-files '("~/workspace/todo.org")))
#+END_SRC

Disabled confirmation for inline script execution.
#+BEGIN_SRC emacs-lisp
(setq org-confirm-babel-evaluate nil)
#+END_SRC

Allow selection with the shift key while outside special contexts.
#+BEGIN_SRC emacs-lisp
(setq org-support-shift-select t)
#+END_SRC

Add timestamp and note when closing TODOs.
#+BEGIN_SRC emacs-lisp
(setq org-log-done 'note)
#+END_SRC

*** keybindings
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "C-c a") 'org-agenda)
#+END_SRC

*** babel languages
Activate inline evaluation for
- JavaScript
- Python
#+BEGIN_SRC 
(org-babel-do-load-languages
 'org-babel-load-languages
 '((js . t)
   (python . t)
   ))
#+END_SRC

Activate syntax highlighting in latex.
This requires
- latex
- minted (latex plugin)
- python
- pygments (python package)
to be installed.
#+BEGIN_SRC emacs-lisp
(require 'ox-latex)
(add-to-list 'org-latex-packages-alist '("" "minted"))
(setq org-latex-listings 'minted)
(setq org-latex-pdf-process
      '("xelatex -shell-escape -interaction nonstopmode -output-directory %o %f"))
#+END_SRC

** org-sticky-headers
#+BEGIN_SRC emacs-lisp
(add-hook 'org-mode-hook 'org-sticky-header-mode)
#+END_SRC
** company
Activate company globally.
#+BEGIN_SRC emacs-lisp
(add-hook 'after-init-hook 'global-company-mode)
#+END_SRC

*** key bindings
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "s-<return>") 'company-complete)
#+END_SRC

** emojify
Enable emojify globally.
#+BEGIN_SRC emacs-lisp
(add-hook 'org-mode-hook 'global-emojify-mode)
#+END_SRC

*** variables
Enable github and unicode emojis.
#+BEGIN_SRC emacs-lisp
(custom-set-variables
  '(emojify-emoji-styles (quote (github unicode)))
  '(emojify-display-style 'image)
)
#+END_SRC

** nlinum
Activate nlinum globally.
#+BEGIN_SRC emacs-lisp
(add-hook 'after-init-hook 'global-nlinum-mode)
#+END_SRC

Pre-calculate gutter width in nlinum to prevent horizontal jumps when scrolling.
#+BEGIN_SRC emacs-lisp
(defun my-nlinum-mode-hook ()
  (when nlinum-mode
    (setq-local nlinum-format
                (concat "%" (number-to-string
                             ;; Guesstimate number of buffer lines.
                             (ceiling (log (max 1 (/ (buffer-size) 80)) 10)))
                        "d"))))
(add-hook 'nlinum-mode-hook #'my-nlinum-mode-hook)
#+END_SRC

** expand-region
*** key bindings
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "C-d") 'er/expand-region)
#+END_SRC

** multiple-cursors
*** key bindings
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "M-s M-g") 'mc/mark-next-like-this)
(global-set-key (kbd "M-s C-g") 'mc/mark-previous-like-this)
(global-set-key (kbd "M-s C-M-g") 'mc/mark-all-like-this)
#+END_SRC
