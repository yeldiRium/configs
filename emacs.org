* Emacs configuration
** keybindings
*** bind window movement to meta+<arrow keys>
    #+BEGIN_SRC emacs-lisp
      (global-set-key (kbd "s-<up>") 'windmove-up)
      (global-set-key (kbd "s-<right>") 'windmove-right)
      (global-set-key (kbd "s-<down>") 'windmove-down)
      (global-set-key (kbd "s-<left>") 'windmove-left)
    #+END_SRC

** package archives
   load emacs 24's package system and ddd MELPA repository
   #+BEGIN_SRC emacs-lisp
     (when (>= emacs-major-version 24)
       (require 'package)
       (add-to-list
	'package-archives
	'("melpa" . "http://melpa.milkbox.net/packages/")
	t))
   #+END_SRC

** enable packages
   #+BEGIN_SRC emacs-lisp
     (custom-set-variables
      '(package-selected-packages (quote (
					  monokai-theme
					  org
					  org-sticky-header
					  company
					  expand-region
					  multiple-cursors
					  nlinum-relative
					  htmlize))))
   #+END_SRC

** initialize packages
   Initialize installed packages for further use.
   #+BEGIN_SRC emacs-lisp
     (package-initialize)
   #+END_SRC

** set theme
   #+BEGIN_SRC emacs-lisp
     (custom-set-variables
      ;; custom-set-variables was added by Custom.
      ;; If you edit it by hand, you could mess it up, so be careful.
      ;; Your init file should contain only one such instance.
      ;; If there is more than one, they won't work right.
      '(custom-enabled-themes '(monokai))
      '(custom-safe-themes
	'("bd7b7c5df1174796deefce5debc2d976b264585d51852c962362be83932873d9" default)))
   #+END_SRC

** core packages
*** whitespace-mode
**** initialization
     #+BEGIN_SRC emacs-lisp
       (add-hook 'after-init-hook 'global-whitespace-mode)
     #+END_SRC

**** variables
     #+BEGIN_SRC emacs-lisp
       (custom-set-variables
	'(whitespace-style '(face empty tabs lines-tail trailing)))
     #+END_SRC

* Package
** org-mode
*** variables
**** set export settings
     #+BEGIN_SRC emacs-lisp
       (custom-set-variables
	'(user-full-name   "Hannes Leutloff")
	'(user-mail-adress "hannes.leutloff@aol.de"))
     #+END_SRC

**** set agenda files
     #+BEGIN_SRC emacs-lisp
       (custom-set-variables
	'(org-agenda-files '("~/workspace/todo.org")))
     #+END_SRC

**** disable confirmation for inline script execution
     #+BEGIN_SRC emacs-lisp
      (custom-set-variables
       '(org-confirm-babel-evaluate nil))
     #+END_SRC

**** allow selection with the shift key while outside special contexts
     #+BEGIN_SRC emacs-lisp
      (custom-set-variables
       '(org-support-shift-select t))
     #+END_SRC

**** add timestamp and note when closing TODOs
     #+BEGIN_SRC emacs-lisp
      (custom-set-variables
       '(org-log-done 'note))
     #+END_SRC

**** set todo keywords
     #+BEGIN_SRC emacs-lisp
       (custom-set-variables
	'(org-todo-keywords
	  '((sequence "TODO" "WAITING" "MAYBE" "DELEGATED" "|" "DONE"))))
     #+END_SRC

*** keybindings
**** org-agenda
     #+BEGIN_SRC emacs-lisp
      (global-set-key (kbd "C-c a") 'org-agenda)
     #+END_SRC

*** babel languages
**** activate inline evaluation
     - JavaScript
     - Python
     #+BEGIN_SRC emacs-lisp
       (org-babel-do-load-languages
	'org-babel-load-languages
	'((js . t)
	  (python . t)
	  ))
     #+END_SRC

**** activate syntax highlighting in latex
     This requires
     - latex
     - minted (latex plugin)
     - python
     - pygments (python package)
     to be installed.
     #+BEGIN_SRC emacs-lisp
       (require 'ox-latex)
       (add-to-list 'org-latex-packages-alist '("" "minted"))
       (custom-set-variables
	'(org-latex-listings 'minted)
	'(org-latex-pdf-process '("xelatex -shell-escape -interaction nonstopmode -output-directory %o %f")))
     #+END_SRC

** org-sticky-headers
   #+BEGIN_SRC emacs-lisp
     (add-hook 'org-mode-hook 'org-sticky-header-mode)
   #+END_SRC
** company
   Activate company globally.
   #+BEGIN_SRC emacs-lisp
     (add-hook 'after-init-hook 'global-company-mode)
   #+END_SRC

*** key bindings
    #+BEGIN_SRC emacs-lisp
      (global-set-key (kbd "s-<return>") 'company-complete)
    #+END_SRC

** nlinum
   Activate nlinum globally.
   #+BEGIN_SRC emacs-lisp
     (add-hook 'after-init-hook 'global-nlinum-mode)
   #+END_SRC

   Pre-calculate gutter width in nlinum to prevent horizontal jumps when scrolling.
   #+BEGIN_SRC emacs-lisp
     (defun my-nlinum-mode-hook ()
       (when nlinum-mode
	 (setq-local nlinum-format
		     (concat "%" (number-to-string
				  ;; Guesstimate number of buffer lines.
				  (ceiling (log (max 1 (/ (buffer-size) 80)) 10)))
			     "d"))))
     (add-hook 'nlinum-mode-hook #'my-nlinum-mode-hook)
   #+END_SRC

** expand-region
*** key bindings
    #+BEGIN_SRC emacs-lisp
      (global-set-key (kbd "C-d") 'er/expand-region)
    #+END_SRC

** multiple-cursors
*** key bindings
    #+BEGIN_SRC emacs-lisp
      (global-set-key (kbd "C->") 'mc/mark-next-like-this)
      (global-set-key (kbd "C-<") 'mc/mark-previous-like-this)
      (global-set-key (kbd "C-=") 'mc/mark-all-like-this)
    #+END_SRC
